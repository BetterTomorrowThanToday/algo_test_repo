name: Sync Silver and Gold to Repo B

on:
  push:
    paths:
      - '백준/Silver/**'
      - '백준/Gold/**'
  workflow_dispatch:

jobs:
  sync-to-b:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout A repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 전체 커밋 히스토리를 가져오기 위해 필요

      - name: Set up Git
        run: |
          git config --global user.name "Hiki's GitHub Actions Bot"
          git config --global user.email "wsx0239@gmail.com"

      - name: Process and Sync Problems by Commit Date
        run: |
          # 처리된 문제들 추적을 위한 임시 파일
          touch processed_problems.txt

          # Silver와 Gold 폴더의 모든 문제 폴더 처리
          for PROBLEM_DIR in 백준/Silver/* 백준/Gold/*; do
            if [ -d "$PROBLEM_DIR" ]; then
              PROBLEM_NAME=$(basename "$PROBLEM_DIR")
              echo "Processing: $PROBLEM_NAME"

              # 해당 폴더의 커밋 날짜 가져오기
              COMMIT_DATE=$(git log -1 --format='%ad' --date=short -- "$PROBLEM_DIR")
              if [ -z "$COMMIT_DATE" ]; then
                echo "No commit date found for $PROBLEM_DIR, skipping..."
                continue
              fi
          
              echo "Commit date: $COMMIT_DATE"
          
              # 연도와 월 추출
              YEAR=$(echo $COMMIT_DATE | cut -d'-' -f1)
              MONTH=$(echo $COMMIT_DATE | cut -d'-' -f2)
          
              # 해당 월의 첫 날 요일 계산 (1=월요일, 7=일요일)
              FIRST_DAY="${YEAR}-${MONTH}-01"
              FIRST_DAY_WEEKDAY=$(date -d "$FIRST_DAY" +"%u")
          
              # 주차 계산
              if [ "$FIRST_DAY_WEEKDAY" -eq 7 ] || [ "$FIRST_DAY_WEEKDAY" -lt 4 ]; then
                BASE_WEEK=1
              else
                BASE_WEEK=0
              fi
          
              # 해당 날짜의 주차 계산
              DAY_OF_MONTH=$(date -d "$COMMIT_DATE" +%d)
              ADJUSTED_DAY=$((DAY_OF_MONTH - 1))
              WEEK_NUMBER=$(( (ADJUSTED_DAY + FIRST_DAY_WEEKDAY - 1) / 7 + BASE_WEEK ))
          
              # B 레포지토리의 대상 경로 생성
              TARGET_DIR="temp_b_repo/${YEAR}-${MONTH}/Week${WEEK_NUMBER}/${PROBLEM_NAME}"
              echo "Target directory: $TARGET_DIR"
          
              # 디렉토리 생성 및 파일 복사
              mkdir -p "$TARGET_DIR"
              cp -r "$PROBLEM_DIR"/* "$TARGET_DIR"/
          
              # 처리된 문제 기록
              echo "$PROBLEM_NAME" >> processed_problems.txt
            fi
          done

      - name: Clone B repository
        run: |
          git clone https://${{ secrets.TOKEN }}@github.com/BetterTomorrowThanToday/test_repo2 b_repo
          cd b_repo
          if [ ! -f README.md ]; then
            echo "# Algorithm Study Archive" > README.md
            git add README.md
            git commit -m "Initial commit"
            git push origin main
          fi
          git pull origin main

      - name: Sync files to B repository
        run: |
          if [ -d "temp_b_repo" ]; then
            cp -r temp_b_repo/* b_repo/
            cd b_repo
            git add .
          
            if [ -n "$(git status --porcelain)" ]; then
              echo "Changes detected, committing..."
              git commit -m "Sync: Update problem solutions ($(date '+%Y-%m-%d'))"
              git push origin main
            else
              echo "No changes to commit"
            fi
          else
            echo "No files to sync"
          fi

      - name: Cleanup
        if: always()
        run: |
          rm -rf temp_b_repo
          rm -f processed_problems.txt